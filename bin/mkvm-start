#!/bin/bash

set -ueo pipefail
source "${MKVM_BIN}/lib/common"

DEFAULT_DISTRO="arch"
declare -A BOXES=(
    ["arch"]="archlinux/archlinux"
    ["ubuntu"]="ubuntu/focal64"
)
VFILE_TEMPLATE="${MKVM_BIN}/../resources/Vagrantfile"

name="${MKVM_INSTANCE:-}"
distro=""
restart=""
ports=()
mounts=()

while [ "$#" -ne 0 ]; do
    case "$1" in
        "-d" | "--distro" ) distro="$2"; shift 2 ;;
        "-p" | "--port" ) ports+=("$2"); shift 2 ;;
        "-m" | "--mount" ) mounts+=("$2"); shift 2 ;;
        "-r" | "--restart" ) restart="1"; shift 1 ;;
        * ) name="$1"; shift 1 ;;
    esac
done

instance_dir="$(instance_dir_of "${name}")"
boxname_file="${instance_dir}/.boxname"
vfile="${instance_dir}/Vagrantfile"

if [ -f "${boxname_file}" ]; then
    if [ -n "${distro}" ]; then
        printf "cannot change distribution without recreating the virtual machine\n" >&2
        exit 1
    fi
    box_name="$(cat "${boxname_file}")"
else
    mkdir -p "${instance_dir}"
    distro="${distro:-"${DEFAULT_DISTRO}"}"
    box_name="${BOXES["${distro}"]}"
    cat <<< "${box_name}" > "${boxname_file}"
fi

extra=(
    "ports = []"
    "mounts = []"
    "box_name = \"${box_name}\""
    "vm_name = \"${name}\""
)
for port in "${ports[@]}"; do
    if [[ "${port}" =~ ":" ]]; then
        host_port="$(cut -d : -f 1 <<< "${port}")"
        guest_port="$(cut -d : -f 2 <<< "${port}")"
    else
        host_port="${port}"
        guest_port="${port}"
    fi
    printf "port: %s (host) -> %s (guest)\n" "${host_port}" "${guest_port}"
    extra+=("ports << [${host_port}, ${guest_port}]")
done
for mount in "${mounts[@]}"; do
    src="$(cut -d : -f 1 <<< "${mount}")"
    dest="$(cut -d : -f 2 <<< "${mount}")"
    printf "mount: %s -> %s\n" "${src}" "${dest}"
    src="$(readlink -f "${src}")"
    extra+=("mounts << [\"${src}\", \"${dest}\"]")
done

content=""
for e in "${extra[@]}"; do
    content+="${e}"$'\n'
done

mkdir -p "${instance_dir}"
cat - "${VFILE_TEMPLATE}" <<<"${content}" > "${vfile}"
if [ -n "${restart}" ]; then
    run_vagrant "${name}" halt
fi
run_vagrant "${name}" up
